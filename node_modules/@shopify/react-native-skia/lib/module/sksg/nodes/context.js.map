{"version":3,"names":["NodeType","createDeclarationContext","drawAtlas","drawBox","drawCircle","drawDiffRect","drawFill","drawGlyphs","drawImage","drawImageSVG","drawLine","drawOval","drawParagraph","drawPatch","drawPath","drawPicture","drawPoints","drawRect","drawRRect","drawText","drawTextBlob","drawTextPath","drawVertices","composeColorFilters","declareLerpColorFilter","makeBlendColorFilter","makeLinearToSRGBGammaColorFilter","makeLumaColorFilter","makeMatrixColorFilter","makeSRGBToLinearGammaColorFilter","composeImageFilters","declareBlend","declareBlendImageFilter","declareBlurMaskFilter","declareDisplacementMapImageFilter","makeBlurImageFilter","makeDropShadowImageFilter","makeMorphologyImageFilter","makeOffsetImageFilter","makeRuntimeShaderImageFilter","materialize","declareColorShader","declareFractalNoiseShader","declareImageShader","declareLinearGradientShader","declareRadialGradientShader","declareShader","declareSweepGradientShader","declareTurbulenceShader","declareTwoPointConicalGradientShader","declarePaint","composePathEffects","declareSumPathEffect","makeCornerPathEffect","makeDashPathEffect","makeDiscretePathEffect","makeLine2DPathEffect","makePath1DPathEffect","makePath2DPathEffect","processDeclarations","ctx","node","processChildren","children","forEach","child","type","props","BlurMaskFilter","LerpColorFilter","Blend","BlendColorFilter","cf","SRGBToLinearGammaColorFilter","LinearToSRGBGammaColorFilter","MatrixColorFilter","LumaColorFilter","Shader","ImageShader","ColorShader","Turbulence","FractalNoise","LinearGradient","RadialGradient","SweepGradient","TwoPointConicalGradient","BlurImageFilter","imgf","OffsetImageFilter","DisplacementMapImageFilter","DropShadowImageFilter","MorphologyImageFilter","BlendImageFilter","RuntimeShaderImageFilter","SumPathEffect","CornerPathEffect","pf","Path1DPathEffect","Path2DPathEffect","Line2DPathEffect","DashPathEffect","DiscretePathEffect","Paint","console","log","preProcessContext","shouldRestoreMatrix","processMatrixAndClipping","layer","declCtx","Skia","isDeclaration","shouldRestorePaint","processPaint","extraPaints","paints","popAll","drawBackdropFilter","canvas","imageFilter","imageFilters","pop","colorFilters","ImageFilter","MakeColorFilter","saveLayer","undefined","restore","draw","BackdropFilter","Layer","hasLayer","paint","map","rawProps","getPaint","lctx","Box","Image","Points","Path","Rect","RRect","Oval","Line","Patch","Vertices","DiffRect","Text","TextPath","TextBlob","Glyphs","Picture","ImageSVG","Paragraph","Atlas","Circle","Fill","Group","warn"],"sources":["context.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { NodeType } from \"../../dom/types\";\nimport type { DrawingNodeProps } from \"../../dom/types\";\nimport type { DrawingContext } from \"../DrawingContext\";\nimport type { SkImageFilter } from \"../../skia/types\";\nimport {\n  createDeclarationContext,\n  type DeclarationContext,\n} from \"../DeclarationContext\";\n\nimport type { Node } from \"./Node\";\nimport {\n  drawAtlas,\n  drawBox,\n  drawCircle,\n  drawDiffRect,\n  drawFill,\n  drawGlyphs,\n  drawImage,\n  drawImageSVG,\n  drawLine,\n  drawOval,\n  drawParagraph,\n  drawPatch,\n  drawPath,\n  drawPicture,\n  drawPoints,\n  drawRect,\n  drawRRect,\n  drawText,\n  drawTextBlob,\n  drawTextPath,\n  drawVertices,\n} from \"./drawings\";\nimport {\n  composeColorFilters,\n  declareLerpColorFilter,\n  makeBlendColorFilter,\n  makeLinearToSRGBGammaColorFilter,\n  makeLumaColorFilter,\n  makeMatrixColorFilter,\n  makeSRGBToLinearGammaColorFilter,\n} from \"./colorFilters\";\nimport {\n  composeImageFilters,\n  declareBlend,\n  declareBlendImageFilter,\n  declareBlurMaskFilter,\n  declareDisplacementMapImageFilter,\n  makeBlurImageFilter,\n  makeDropShadowImageFilter,\n  makeMorphologyImageFilter,\n  makeOffsetImageFilter,\n  makeRuntimeShaderImageFilter,\n} from \"./imageFilters\";\nimport { materialize } from \"./utils\";\nimport {\n  declareColorShader,\n  declareFractalNoiseShader,\n  declareImageShader,\n  declareLinearGradientShader,\n  declareRadialGradientShader,\n  declareShader,\n  declareSweepGradientShader,\n  declareTurbulenceShader,\n  declareTwoPointConicalGradientShader,\n} from \"./shaders\";\nimport { declarePaint } from \"./paint\";\nimport {\n  composePathEffects,\n  declareSumPathEffect,\n  makeCornerPathEffect,\n  makeDashPathEffect,\n  makeDiscretePathEffect,\n  makeLine2DPathEffect,\n  makePath1DPathEffect,\n  makePath2DPathEffect,\n} from \"./pathEffects\";\n\nfunction processDeclarations(ctx: DeclarationContext, node: Node<any>) {\n  \"worklet\";\n  const processChildren = () =>\n    node.children.forEach((child) => processDeclarations(ctx, child));\n  const { type } = node;\n  const props = materialize(node.props);\n  switch (type) {\n    // Mask Filter\n    case NodeType.BlurMaskFilter: {\n      declareBlurMaskFilter(ctx, props);\n      break;\n    }\n    // Color Filters\n    case NodeType.LerpColorFilter: {\n      processChildren();\n      declareLerpColorFilter(ctx, props);\n      break;\n    }\n    case NodeType.Blend: {\n      processChildren();\n      declareBlend(ctx, props);\n      break;\n    }\n    case NodeType.BlendColorFilter: {\n      const cf = makeBlendColorFilter(ctx, props);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.SRGBToLinearGammaColorFilter: {\n      const cf = makeSRGBToLinearGammaColorFilter(ctx);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.LinearToSRGBGammaColorFilter: {\n      const cf = makeLinearToSRGBGammaColorFilter(ctx);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.MatrixColorFilter: {\n      const cf = makeMatrixColorFilter(ctx, props);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.LumaColorFilter: {\n      const cf = makeLumaColorFilter(ctx);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    // Shaders\n    case NodeType.Shader: {\n      processChildren();\n      declareShader(ctx, props);\n      break;\n    }\n    case NodeType.ImageShader: {\n      declareImageShader(ctx, props);\n      break;\n    }\n    case NodeType.ColorShader: {\n      declareColorShader(ctx, props);\n      break;\n    }\n    case NodeType.Turbulence: {\n      declareTurbulenceShader(ctx, props);\n      break;\n    }\n    case NodeType.FractalNoise: {\n      declareFractalNoiseShader(ctx, props);\n      break;\n    }\n    case NodeType.LinearGradient: {\n      declareLinearGradientShader(ctx, props);\n      break;\n    }\n    case NodeType.RadialGradient: {\n      declareRadialGradientShader(ctx, props);\n      break;\n    }\n    case NodeType.SweepGradient: {\n      declareSweepGradientShader(ctx, props);\n      break;\n    }\n    case NodeType.TwoPointConicalGradient: {\n      declareTwoPointConicalGradientShader(ctx, props);\n      break;\n    }\n    // Image Filters\n    case NodeType.BlurImageFilter: {\n      const imgf = makeBlurImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.OffsetImageFilter: {\n      const imgf = makeOffsetImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.DisplacementMapImageFilter: {\n      processChildren();\n      declareDisplacementMapImageFilter(ctx, props);\n      break;\n    }\n    case NodeType.DropShadowImageFilter: {\n      const imgf = makeDropShadowImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.MorphologyImageFilter: {\n      const imgf = makeMorphologyImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.BlendImageFilter: {\n      processChildren();\n      declareBlendImageFilter(ctx, props);\n      break;\n    }\n    case NodeType.RuntimeShaderImageFilter: {\n      const imgf = makeRuntimeShaderImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    // Path Effects\n    case NodeType.SumPathEffect: {\n      processChildren();\n      declareSumPathEffect(ctx);\n      break;\n    }\n    case NodeType.CornerPathEffect: {\n      const pf = makeCornerPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.Path1DPathEffect: {\n      const pf = makePath1DPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.Path2DPathEffect: {\n      const pf = makePath2DPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.Line2DPathEffect: {\n      const pf = makeLine2DPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.DashPathEffect: {\n      const pf = makeDashPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.DiscretePathEffect: {\n      const pf = makeDiscretePathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    // Paint\n    case NodeType.Paint:\n      processChildren();\n      declarePaint(ctx, props);\n      break;\n    default:\n      console.log(\"Unknown declaration node: \", type);\n  }\n}\n\nconst preProcessContext = (\n  ctx: DrawingContext,\n  props: DrawingNodeProps,\n  node: Node<any>\n) => {\n  \"worklet\";\n  const shouldRestoreMatrix = ctx.processMatrixAndClipping(props, props.layer);\n  const declCtx = createDeclarationContext(ctx.Skia);\n  node.children.forEach((child) => {\n    if (child.isDeclaration) {\n      processDeclarations(declCtx, child);\n    }\n  });\n  const shouldRestorePaint = ctx.processPaint(props, declCtx);\n  return {\n    shouldRestoreMatrix,\n    shouldRestorePaint,\n    extraPaints: declCtx.paints.popAll(),\n  };\n};\n\nconst drawBackdropFilter = (ctx: DrawingContext, node: Node) => {\n  \"worklet\";\n  const { canvas, Skia } = ctx;\n  const child = node.children[0];\n  let imageFilter: SkImageFilter | null = null;\n  if (child.isDeclaration) {\n    const declCtx = createDeclarationContext(ctx.Skia);\n    processDeclarations(declCtx, child);\n    const imgf = declCtx.imageFilters.pop();\n    if (imgf) {\n      imageFilter = imgf;\n    } else {\n      const cf = declCtx.colorFilters.pop();\n      if (cf) {\n        imageFilter = Skia.ImageFilter.MakeColorFilter(cf, null);\n      }\n    }\n  }\n  canvas.saveLayer(undefined, null, imageFilter);\n  canvas.restore();\n};\n\nexport function draw(ctx: DrawingContext, node: Node<any>) {\n  \"worklet\";\n  // Special mixed nodes\n  if (node.type === NodeType.BackdropFilter) {\n    drawBackdropFilter(ctx, node);\n    return;\n  }\n  if (node.type === NodeType.Layer) {\n    let hasLayer = false;\n    const [layer, ...children] = node.children;\n    if (layer.isDeclaration) {\n      const declCtx = createDeclarationContext(ctx.Skia);\n      processDeclarations(declCtx, layer);\n      const paint = declCtx.paints.pop();\n      if (paint) {\n        hasLayer = true;\n        ctx.canvas.saveLayer(paint);\n      }\n    }\n    children.map((child) => {\n      if (!child.isDeclaration) {\n        draw(ctx, child);\n      }\n    });\n    if (hasLayer) {\n      ctx.canvas.restore();\n    }\n    return;\n  }\n  const { type, props: rawProps, children } = node;\n  // Regular nodes\n  const props = materialize(rawProps);\n  const { shouldRestoreMatrix, shouldRestorePaint, extraPaints } =\n    preProcessContext(ctx, props, node);\n  const paints = [ctx.getPaint(), ...extraPaints];\n  paints.forEach((paint) => {\n    const lctx = { paint, Skia: ctx.Skia, canvas: ctx.canvas };\n    switch (type) {\n      case NodeType.Box:\n        drawBox(lctx, props, node.children);\n        break;\n      case NodeType.Image:\n        drawImage(lctx, props);\n        break;\n      case NodeType.Points:\n        drawPoints(lctx, props);\n        break;\n      case NodeType.Path:\n        drawPath(lctx, props);\n        break;\n      case NodeType.Rect:\n        drawRect(lctx, props);\n        break;\n      case NodeType.RRect:\n        drawRRect(lctx, props);\n        break;\n      case NodeType.Oval:\n        drawOval(lctx, props);\n        break;\n      case NodeType.Line:\n        drawLine(lctx, props);\n        break;\n      case NodeType.Patch:\n        drawPatch(lctx, props);\n        break;\n      case NodeType.Vertices:\n        drawVertices(lctx, props);\n        break;\n      case NodeType.DiffRect:\n        drawDiffRect(lctx, props);\n        break;\n      case NodeType.Text:\n        drawText(lctx, props);\n        break;\n      case NodeType.TextPath:\n        drawTextPath(lctx, props);\n        break;\n      case NodeType.TextBlob:\n        drawTextBlob(lctx, props);\n        break;\n      case NodeType.Glyphs:\n        drawGlyphs(lctx, props);\n        break;\n      case NodeType.Picture:\n        drawPicture(lctx, props);\n        break;\n      case NodeType.ImageSVG:\n        drawImageSVG(lctx, props);\n        break;\n      case NodeType.Paragraph:\n        drawParagraph(lctx, props);\n        break;\n      case NodeType.Atlas:\n        drawAtlas(lctx, props);\n        break;\n      case NodeType.Circle:\n        drawCircle(lctx, props);\n        break;\n      case NodeType.Fill:\n        drawFill(lctx, props);\n        break;\n      case NodeType.Group:\n        // TODO: do nothing\n        break;\n      default:\n        if (!node.isDeclaration) {\n          console.warn(`Unsupported node type: ${type}`);\n        }\n    }\n  });\n  children.forEach((child) => {\n    if (!child.isDeclaration) {\n      draw(ctx, child);\n    }\n  });\n  if (shouldRestoreMatrix) {\n    ctx.canvas.restore();\n  }\n  if (shouldRestorePaint) {\n    ctx.restore();\n  }\n}\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,iBAAiB;AAI1C,SACEC,wBAAwB,QAEnB,uBAAuB;AAG9B,SACEC,SAAS,EACTC,OAAO,EACPC,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,SAAS,EACTC,YAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,aAAa,EACbC,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,YAAY,QACP,YAAY;AACnB,SACEC,mBAAmB,EACnBC,sBAAsB,EACtBC,oBAAoB,EACpBC,gCAAgC,EAChCC,mBAAmB,EACnBC,qBAAqB,EACrBC,gCAAgC,QAC3B,gBAAgB;AACvB,SACEC,mBAAmB,EACnBC,YAAY,EACZC,uBAAuB,EACvBC,qBAAqB,EACrBC,iCAAiC,EACjCC,mBAAmB,EACnBC,yBAAyB,EACzBC,yBAAyB,EACzBC,qBAAqB,EACrBC,4BAA4B,QACvB,gBAAgB;AACvB,SAASC,WAAW,QAAQ,SAAS;AACrC,SACEC,kBAAkB,EAClBC,yBAAyB,EACzBC,kBAAkB,EAClBC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,aAAa,EACbC,0BAA0B,EAC1BC,uBAAuB,EACvBC,oCAAoC,QAC/B,WAAW;AAClB,SAASC,YAAY,QAAQ,SAAS;AACtC,SACEC,kBAAkB,EAClBC,oBAAoB,EACpBC,oBAAoB,EACpBC,kBAAkB,EAClBC,sBAAsB,EACtBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,QACf,eAAe;AAEtB,SAASC,mBAAmBA,CAACC,GAAuB,EAAEC,IAAe,EAAE;EACrE,SAAS;;EACT,MAAMC,eAAe,GAAGA,CAAA,KACtBD,IAAI,CAACE,QAAQ,CAACC,OAAO,CAAEC,KAAK,IAAKN,mBAAmB,CAACC,GAAG,EAAEK,KAAK,CAAC,CAAC;EACnE,MAAM;IAAEC;EAAK,CAAC,GAAGL,IAAI;EACrB,MAAMM,KAAK,GAAG3B,WAAW,CAACqB,IAAI,CAACM,KAAK,CAAC;EACrC,QAAQD,IAAI;IACV;IACA,KAAKlE,QAAQ,CAACoE,cAAc;MAAE;QAC5BnC,qBAAqB,CAAC2B,GAAG,EAAEO,KAAK,CAAC;QACjC;MACF;IACA;IACA,KAAKnE,QAAQ,CAACqE,eAAe;MAAE;QAC7BP,eAAe,CAAC,CAAC;QACjBtC,sBAAsB,CAACoC,GAAG,EAAEO,KAAK,CAAC;QAClC;MACF;IACA,KAAKnE,QAAQ,CAACsE,KAAK;MAAE;QACnBR,eAAe,CAAC,CAAC;QACjB/B,YAAY,CAAC6B,GAAG,EAAEO,KAAK,CAAC;QACxB;MACF;IACA,KAAKnE,QAAQ,CAACuE,gBAAgB;MAAE;QAC9B,MAAMC,EAAE,GAAG/C,oBAAoB,CAACmC,GAAG,EAAEO,KAAK,CAAC;QAC3C5C,mBAAmB,CAACqC,GAAG,EAAEY,EAAE,EAAEV,eAAe,CAAC;QAC7C;MACF;IACA,KAAK9D,QAAQ,CAACyE,4BAA4B;MAAE;QAC1C,MAAMD,EAAE,GAAG3C,gCAAgC,CAAC+B,GAAG,CAAC;QAChDrC,mBAAmB,CAACqC,GAAG,EAAEY,EAAE,EAAEV,eAAe,CAAC;QAC7C;MACF;IACA,KAAK9D,QAAQ,CAAC0E,4BAA4B;MAAE;QAC1C,MAAMF,EAAE,GAAG9C,gCAAgC,CAACkC,GAAG,CAAC;QAChDrC,mBAAmB,CAACqC,GAAG,EAAEY,EAAE,EAAEV,eAAe,CAAC;QAC7C;MACF;IACA,KAAK9D,QAAQ,CAAC2E,iBAAiB;MAAE;QAC/B,MAAMH,EAAE,GAAG5C,qBAAqB,CAACgC,GAAG,EAAEO,KAAK,CAAC;QAC5C5C,mBAAmB,CAACqC,GAAG,EAAEY,EAAE,EAAEV,eAAe,CAAC;QAC7C;MACF;IACA,KAAK9D,QAAQ,CAAC4E,eAAe;MAAE;QAC7B,MAAMJ,EAAE,GAAG7C,mBAAmB,CAACiC,GAAG,CAAC;QACnCrC,mBAAmB,CAACqC,GAAG,EAAEY,EAAE,EAAEV,eAAe,CAAC;QAC7C;MACF;IACA;IACA,KAAK9D,QAAQ,CAAC6E,MAAM;MAAE;QACpBf,eAAe,CAAC,CAAC;QACjBhB,aAAa,CAACc,GAAG,EAAEO,KAAK,CAAC;QACzB;MACF;IACA,KAAKnE,QAAQ,CAAC8E,WAAW;MAAE;QACzBnC,kBAAkB,CAACiB,GAAG,EAAEO,KAAK,CAAC;QAC9B;MACF;IACA,KAAKnE,QAAQ,CAAC+E,WAAW;MAAE;QACzBtC,kBAAkB,CAACmB,GAAG,EAAEO,KAAK,CAAC;QAC9B;MACF;IACA,KAAKnE,QAAQ,CAACgF,UAAU;MAAE;QACxBhC,uBAAuB,CAACY,GAAG,EAAEO,KAAK,CAAC;QACnC;MACF;IACA,KAAKnE,QAAQ,CAACiF,YAAY;MAAE;QAC1BvC,yBAAyB,CAACkB,GAAG,EAAEO,KAAK,CAAC;QACrC;MACF;IACA,KAAKnE,QAAQ,CAACkF,cAAc;MAAE;QAC5BtC,2BAA2B,CAACgB,GAAG,EAAEO,KAAK,CAAC;QACvC;MACF;IACA,KAAKnE,QAAQ,CAACmF,cAAc;MAAE;QAC5BtC,2BAA2B,CAACe,GAAG,EAAEO,KAAK,CAAC;QACvC;MACF;IACA,KAAKnE,QAAQ,CAACoF,aAAa;MAAE;QAC3BrC,0BAA0B,CAACa,GAAG,EAAEO,KAAK,CAAC;QACtC;MACF;IACA,KAAKnE,QAAQ,CAACqF,uBAAuB;MAAE;QACrCpC,oCAAoC,CAACW,GAAG,EAAEO,KAAK,CAAC;QAChD;MACF;IACA;IACA,KAAKnE,QAAQ,CAACsF,eAAe;MAAE;QAC7B,MAAMC,IAAI,GAAGpD,mBAAmB,CAACyB,GAAG,EAAEO,KAAK,CAAC;QAC5CrC,mBAAmB,CAAC8B,GAAG,EAAE2B,IAAI,EAAEzB,eAAe,CAAC;QAC/C;MACF;IACA,KAAK9D,QAAQ,CAACwF,iBAAiB;MAAE;QAC/B,MAAMD,IAAI,GAAGjD,qBAAqB,CAACsB,GAAG,EAAEO,KAAK,CAAC;QAC9CrC,mBAAmB,CAAC8B,GAAG,EAAE2B,IAAI,EAAEzB,eAAe,CAAC;QAC/C;MACF;IACA,KAAK9D,QAAQ,CAACyF,0BAA0B;MAAE;QACxC3B,eAAe,CAAC,CAAC;QACjB5B,iCAAiC,CAAC0B,GAAG,EAAEO,KAAK,CAAC;QAC7C;MACF;IACA,KAAKnE,QAAQ,CAAC0F,qBAAqB;MAAE;QACnC,MAAMH,IAAI,GAAGnD,yBAAyB,CAACwB,GAAG,EAAEO,KAAK,CAAC;QAClDrC,mBAAmB,CAAC8B,GAAG,EAAE2B,IAAI,EAAEzB,eAAe,CAAC;QAC/C;MACF;IACA,KAAK9D,QAAQ,CAAC2F,qBAAqB;MAAE;QACnC,MAAMJ,IAAI,GAAGlD,yBAAyB,CAACuB,GAAG,EAAEO,KAAK,CAAC;QAClDrC,mBAAmB,CAAC8B,GAAG,EAAE2B,IAAI,EAAEzB,eAAe,CAAC;QAC/C;MACF;IACA,KAAK9D,QAAQ,CAAC4F,gBAAgB;MAAE;QAC9B9B,eAAe,CAAC,CAAC;QACjB9B,uBAAuB,CAAC4B,GAAG,EAAEO,KAAK,CAAC;QACnC;MACF;IACA,KAAKnE,QAAQ,CAAC6F,wBAAwB;MAAE;QACtC,MAAMN,IAAI,GAAGhD,4BAA4B,CAACqB,GAAG,EAAEO,KAAK,CAAC;QACrDrC,mBAAmB,CAAC8B,GAAG,EAAE2B,IAAI,EAAEzB,eAAe,CAAC;QAC/C;MACF;IACA;IACA,KAAK9D,QAAQ,CAAC8F,aAAa;MAAE;QAC3BhC,eAAe,CAAC,CAAC;QACjBV,oBAAoB,CAACQ,GAAG,CAAC;QACzB;MACF;IACA,KAAK5D,QAAQ,CAAC+F,gBAAgB;MAAE;QAC9B,MAAMC,EAAE,GAAG3C,oBAAoB,CAACO,GAAG,EAAEO,KAAK,CAAC;QAC3ChB,kBAAkB,CAACS,GAAG,EAAEoC,EAAE,EAAElC,eAAe,CAAC;QAC5C;MACF;IACA,KAAK9D,QAAQ,CAACiG,gBAAgB;MAAE;QAC9B,MAAMD,EAAE,GAAGvC,oBAAoB,CAACG,GAAG,EAAEO,KAAK,CAAC;QAC3ChB,kBAAkB,CAACS,GAAG,EAAEoC,EAAE,EAAElC,eAAe,CAAC;QAC5C;MACF;IACA,KAAK9D,QAAQ,CAACkG,gBAAgB;MAAE;QAC9B,MAAMF,EAAE,GAAGtC,oBAAoB,CAACE,GAAG,EAAEO,KAAK,CAAC;QAC3ChB,kBAAkB,CAACS,GAAG,EAAEoC,EAAE,EAAElC,eAAe,CAAC;QAC5C;MACF;IACA,KAAK9D,QAAQ,CAACmG,gBAAgB;MAAE;QAC9B,MAAMH,EAAE,GAAGxC,oBAAoB,CAACI,GAAG,EAAEO,KAAK,CAAC;QAC3ChB,kBAAkB,CAACS,GAAG,EAAEoC,EAAE,EAAElC,eAAe,CAAC;QAC5C;MACF;IACA,KAAK9D,QAAQ,CAACoG,cAAc;MAAE;QAC5B,MAAMJ,EAAE,GAAG1C,kBAAkB,CAACM,GAAG,EAAEO,KAAK,CAAC;QACzChB,kBAAkB,CAACS,GAAG,EAAEoC,EAAE,EAAElC,eAAe,CAAC;QAC5C;MACF;IACA,KAAK9D,QAAQ,CAACqG,kBAAkB;MAAE;QAChC,MAAML,EAAE,GAAGzC,sBAAsB,CAACK,GAAG,EAAEO,KAAK,CAAC;QAC7ChB,kBAAkB,CAACS,GAAG,EAAEoC,EAAE,EAAElC,eAAe,CAAC;QAC5C;MACF;IACA;IACA,KAAK9D,QAAQ,CAACsG,KAAK;MACjBxC,eAAe,CAAC,CAAC;MACjBZ,YAAY,CAACU,GAAG,EAAEO,KAAK,CAAC;MACxB;IACF;MACEoC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEtC,IAAI,CAAC;EACnD;AACF;AAEA,MAAMuC,iBAAiB,GAAGA,CACxB7C,GAAmB,EACnBO,KAAuB,EACvBN,IAAe,KACZ;EACH,SAAS;;EACT,MAAM6C,mBAAmB,GAAG9C,GAAG,CAAC+C,wBAAwB,CAACxC,KAAK,EAAEA,KAAK,CAACyC,KAAK,CAAC;EAC5E,MAAMC,OAAO,GAAG5G,wBAAwB,CAAC2D,GAAG,CAACkD,IAAI,CAAC;EAClDjD,IAAI,CAACE,QAAQ,CAACC,OAAO,CAAEC,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAAC8C,aAAa,EAAE;MACvBpD,mBAAmB,CAACkD,OAAO,EAAE5C,KAAK,CAAC;IACrC;EACF,CAAC,CAAC;EACF,MAAM+C,kBAAkB,GAAGpD,GAAG,CAACqD,YAAY,CAAC9C,KAAK,EAAE0C,OAAO,CAAC;EAC3D,OAAO;IACLH,mBAAmB;IACnBM,kBAAkB;IAClBE,WAAW,EAAEL,OAAO,CAACM,MAAM,CAACC,MAAM,CAAC;EACrC,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAGA,CAACzD,GAAmB,EAAEC,IAAU,KAAK;EAC9D,SAAS;;EACT,MAAM;IAAEyD,MAAM;IAAER;EAAK,CAAC,GAAGlD,GAAG;EAC5B,MAAMK,KAAK,GAAGJ,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC9B,IAAIwD,WAAiC,GAAG,IAAI;EAC5C,IAAItD,KAAK,CAAC8C,aAAa,EAAE;IACvB,MAAMF,OAAO,GAAG5G,wBAAwB,CAAC2D,GAAG,CAACkD,IAAI,CAAC;IAClDnD,mBAAmB,CAACkD,OAAO,EAAE5C,KAAK,CAAC;IACnC,MAAMsB,IAAI,GAAGsB,OAAO,CAACW,YAAY,CAACC,GAAG,CAAC,CAAC;IACvC,IAAIlC,IAAI,EAAE;MACRgC,WAAW,GAAGhC,IAAI;IACpB,CAAC,MAAM;MACL,MAAMf,EAAE,GAAGqC,OAAO,CAACa,YAAY,CAACD,GAAG,CAAC,CAAC;MACrC,IAAIjD,EAAE,EAAE;QACN+C,WAAW,GAAGT,IAAI,CAACa,WAAW,CAACC,eAAe,CAACpD,EAAE,EAAE,IAAI,CAAC;MAC1D;IACF;EACF;EACA8C,MAAM,CAACO,SAAS,CAACC,SAAS,EAAE,IAAI,EAAEP,WAAW,CAAC;EAC9CD,MAAM,CAACS,OAAO,CAAC,CAAC;AAClB,CAAC;AAED,OAAO,SAASC,IAAIA,CAACpE,GAAmB,EAAEC,IAAe,EAAE;EACzD,SAAS;;EACT;EACA,IAAIA,IAAI,CAACK,IAAI,KAAKlE,QAAQ,CAACiI,cAAc,EAAE;IACzCZ,kBAAkB,CAACzD,GAAG,EAAEC,IAAI,CAAC;IAC7B;EACF;EACA,IAAIA,IAAI,CAACK,IAAI,KAAKlE,QAAQ,CAACkI,KAAK,EAAE;IAChC,IAAIC,QAAQ,GAAG,KAAK;IACpB,MAAM,CAACvB,KAAK,EAAE,GAAG7C,QAAQ,CAAC,GAAGF,IAAI,CAACE,QAAQ;IAC1C,IAAI6C,KAAK,CAACG,aAAa,EAAE;MACvB,MAAMF,OAAO,GAAG5G,wBAAwB,CAAC2D,GAAG,CAACkD,IAAI,CAAC;MAClDnD,mBAAmB,CAACkD,OAAO,EAAED,KAAK,CAAC;MACnC,MAAMwB,KAAK,GAAGvB,OAAO,CAACM,MAAM,CAACM,GAAG,CAAC,CAAC;MAClC,IAAIW,KAAK,EAAE;QACTD,QAAQ,GAAG,IAAI;QACfvE,GAAG,CAAC0D,MAAM,CAACO,SAAS,CAACO,KAAK,CAAC;MAC7B;IACF;IACArE,QAAQ,CAACsE,GAAG,CAAEpE,KAAK,IAAK;MACtB,IAAI,CAACA,KAAK,CAAC8C,aAAa,EAAE;QACxBiB,IAAI,CAACpE,GAAG,EAAEK,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;IACF,IAAIkE,QAAQ,EAAE;MACZvE,GAAG,CAAC0D,MAAM,CAACS,OAAO,CAAC,CAAC;IACtB;IACA;EACF;EACA,MAAM;IAAE7D,IAAI;IAAEC,KAAK,EAAEmE,QAAQ;IAAEvE;EAAS,CAAC,GAAGF,IAAI;EAChD;EACA,MAAMM,KAAK,GAAG3B,WAAW,CAAC8F,QAAQ,CAAC;EACnC,MAAM;IAAE5B,mBAAmB;IAAEM,kBAAkB;IAAEE;EAAY,CAAC,GAC5DT,iBAAiB,CAAC7C,GAAG,EAAEO,KAAK,EAAEN,IAAI,CAAC;EACrC,MAAMsD,MAAM,GAAG,CAACvD,GAAG,CAAC2E,QAAQ,CAAC,CAAC,EAAE,GAAGrB,WAAW,CAAC;EAC/CC,MAAM,CAACnD,OAAO,CAAEoE,KAAK,IAAK;IACxB,MAAMI,IAAI,GAAG;MAAEJ,KAAK;MAAEtB,IAAI,EAAElD,GAAG,CAACkD,IAAI;MAAEQ,MAAM,EAAE1D,GAAG,CAAC0D;IAAO,CAAC;IAC1D,QAAQpD,IAAI;MACV,KAAKlE,QAAQ,CAACyI,GAAG;QACftI,OAAO,CAACqI,IAAI,EAAErE,KAAK,EAAEN,IAAI,CAACE,QAAQ,CAAC;QACnC;MACF,KAAK/D,QAAQ,CAAC0I,KAAK;QACjBlI,SAAS,CAACgI,IAAI,EAAErE,KAAK,CAAC;QACtB;MACF,KAAKnE,QAAQ,CAAC2I,MAAM;QAClB3H,UAAU,CAACwH,IAAI,EAAErE,KAAK,CAAC;QACvB;MACF,KAAKnE,QAAQ,CAAC4I,IAAI;QAChB9H,QAAQ,CAAC0H,IAAI,EAAErE,KAAK,CAAC;QACrB;MACF,KAAKnE,QAAQ,CAAC6I,IAAI;QAChB5H,QAAQ,CAACuH,IAAI,EAAErE,KAAK,CAAC;QACrB;MACF,KAAKnE,QAAQ,CAAC8I,KAAK;QACjB5H,SAAS,CAACsH,IAAI,EAAErE,KAAK,CAAC;QACtB;MACF,KAAKnE,QAAQ,CAAC+I,IAAI;QAChBpI,QAAQ,CAAC6H,IAAI,EAAErE,KAAK,CAAC;QACrB;MACF,KAAKnE,QAAQ,CAACgJ,IAAI;QAChBtI,QAAQ,CAAC8H,IAAI,EAAErE,KAAK,CAAC;QACrB;MACF,KAAKnE,QAAQ,CAACiJ,KAAK;QACjBpI,SAAS,CAAC2H,IAAI,EAAErE,KAAK,CAAC;QACtB;MACF,KAAKnE,QAAQ,CAACkJ,QAAQ;QACpB5H,YAAY,CAACkH,IAAI,EAAErE,KAAK,CAAC;QACzB;MACF,KAAKnE,QAAQ,CAACmJ,QAAQ;QACpB9I,YAAY,CAACmI,IAAI,EAAErE,KAAK,CAAC;QACzB;MACF,KAAKnE,QAAQ,CAACoJ,IAAI;QAChBjI,QAAQ,CAACqH,IAAI,EAAErE,KAAK,CAAC;QACrB;MACF,KAAKnE,QAAQ,CAACqJ,QAAQ;QACpBhI,YAAY,CAACmH,IAAI,EAAErE,KAAK,CAAC;QACzB;MACF,KAAKnE,QAAQ,CAACsJ,QAAQ;QACpBlI,YAAY,CAACoH,IAAI,EAAErE,KAAK,CAAC;QACzB;MACF,KAAKnE,QAAQ,CAACuJ,MAAM;QAClBhJ,UAAU,CAACiI,IAAI,EAAErE,KAAK,CAAC;QACvB;MACF,KAAKnE,QAAQ,CAACwJ,OAAO;QACnBzI,WAAW,CAACyH,IAAI,EAAErE,KAAK,CAAC;QACxB;MACF,KAAKnE,QAAQ,CAACyJ,QAAQ;QACpBhJ,YAAY,CAAC+H,IAAI,EAAErE,KAAK,CAAC;QACzB;MACF,KAAKnE,QAAQ,CAAC0J,SAAS;QACrB9I,aAAa,CAAC4H,IAAI,EAAErE,KAAK,CAAC;QAC1B;MACF,KAAKnE,QAAQ,CAAC2J,KAAK;QACjBzJ,SAAS,CAACsI,IAAI,EAAErE,KAAK,CAAC;QACtB;MACF,KAAKnE,QAAQ,CAAC4J,MAAM;QAClBxJ,UAAU,CAACoI,IAAI,EAAErE,KAAK,CAAC;QACvB;MACF,KAAKnE,QAAQ,CAAC6J,IAAI;QAChBvJ,QAAQ,CAACkI,IAAI,EAAErE,KAAK,CAAC;QACrB;MACF,KAAKnE,QAAQ,CAAC8J,KAAK;QACjB;QACA;MACF;QACE,IAAI,CAACjG,IAAI,CAACkD,aAAa,EAAE;UACvBR,OAAO,CAACwD,IAAI,CAAC,0BAA0B7F,IAAI,EAAE,CAAC;QAChD;IACJ;EACF,CAAC,CAAC;EACFH,QAAQ,CAACC,OAAO,CAAEC,KAAK,IAAK;IAC1B,IAAI,CAACA,KAAK,CAAC8C,aAAa,EAAE;MACxBiB,IAAI,CAACpE,GAAG,EAAEK,KAAK,CAAC;IAClB;EACF,CAAC,CAAC;EACF,IAAIyC,mBAAmB,EAAE;IACvB9C,GAAG,CAAC0D,MAAM,CAACS,OAAO,CAAC,CAAC;EACtB;EACA,IAAIf,kBAAkB,EAAE;IACtBpD,GAAG,CAACmE,OAAO,CAAC,CAAC;EACf;AACF","ignoreList":[]}