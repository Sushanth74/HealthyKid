{"version":3,"names":["deflate","enumKey","fitRects","inflate","NodeType","processCircle","processPath","processRect","processRRect","saturate","BlendMode","BlurStyle","ClipOp","FillType","isRRect","PointMode","VertexMode","materialize","drawLine","ctx","props","p1","p2","canvas","x","y","paint","drawOval","rect","Skia","drawBox","children","box","defaultBox","opacity","getAlphaf","RRectXY","shadows","map","node","type","BoxShadow","filter","n","shadow","inner","color","blur","spread","dx","dy","lPaint","Paint","setColor","Color","setAlphaf","setMaskFilter","MaskFilter","MakeBlur","Normal","drawRRect","delta","Point","Math","abs","save","clipRRect","Intersect","outer","drawDRRect","restore","drawImage","image","_props$fit","fit","src","dst","width","height","drawImageRect","drawPoints","points","mode","drawVertices","textures","colors","indices","blendMode","vertexMode","Triangles","vertices","MakeVertices","c","undefined","defaultBlendMode","DstOver","SrcOver","blend","drawDiffRect","drawTextPath","path","font","initialOffset","text","ids","getGlyphIDs","widths","getGlyphWidths","rsx","meas","ContourMeasureIter","cont","next","dist","i","length","substring","p","t","getPosTan","adjustedX","adjustedY","push","RSXform","derived","TextBlob","MakeFromRSXform","drawTextBlob","drawText","drawPatch","texture","patch","pos","c2","c1","drawPath","start","trimStart","end","trimEnd","fillType","stroke","pathProps","hasStartOffset","hasEndOffset","hasStrokeOptions","hasFillType","willMutatePath","pristinePath","copy","setFillType","trim","drawRect","blob","drawGlyphs","glyphs","reduce","acc","glyph","id","positions","drawImageSVG","svg","translate","drawSvg","drawParagraph","paragraph","layout","drawPicture","picture","drawAtlas","sprites","transforms","drawCircle","r","drawFill","_props","drawPaint"],"sources":["drawings.ts"],"sourcesContent":["import {\n  deflate,\n  enumKey,\n  fitRects,\n  inflate,\n  NodeType,\n  processCircle,\n  processPath,\n  processRect,\n  processRRect,\n} from \"../../dom/nodes\";\nimport type {\n  AtlasProps,\n  BoxProps,\n  BoxShadowProps,\n  CircleProps,\n  DiffRectProps,\n  DrawingNodeProps,\n  GlyphsProps,\n  ImageProps,\n  ImageSVGProps,\n  LineProps,\n  OvalProps,\n  ParagraphProps,\n  PatchProps,\n  PathProps,\n  PictureProps,\n  PointsProps,\n  RectProps,\n  RoundedRectProps,\n  TextBlobProps,\n  TextPathProps,\n  TextProps,\n  VerticesProps,\n} from \"../../dom/types\";\nimport { saturate } from \"../../renderer/processors\";\nimport type {\n  SkCanvas,\n  SkPaint,\n  SkPoint,\n  SkRSXform,\n  Skia,\n} from \"../../skia/types\";\nimport {\n  BlendMode,\n  BlurStyle,\n  ClipOp,\n  FillType,\n  isRRect,\n  PointMode,\n  VertexMode,\n} from \"../../skia/types\";\n\nimport type { Node } from \"./Node\";\nimport { materialize } from \"./utils\";\n\ninterface LocalDrawingContext {\n  Skia: Skia;\n  canvas: SkCanvas;\n  paint: SkPaint;\n}\n\nexport const drawLine = (ctx: LocalDrawingContext, props: LineProps) => {\n  \"worklet\";\n  const { p1, p2 } = props;\n  ctx.canvas.drawLine(p1.x, p1.y, p2.x, p2.y, ctx.paint);\n};\n\nexport const drawOval = (ctx: LocalDrawingContext, props: OvalProps) => {\n  \"worklet\";\n  const rect = processRect(ctx.Skia, props);\n  ctx.canvas.drawOval(rect, ctx.paint);\n};\n\nexport const drawBox = (\n  ctx: LocalDrawingContext,\n  props: BoxProps,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  children: Node<any>[]\n) => {\n  \"worklet\";\n  const { paint, Skia, canvas } = ctx;\n  const { box: defaultBox } = props;\n  const opacity = paint.getAlphaf();\n  const box = isRRect(defaultBox) ? defaultBox : Skia.RRectXY(defaultBox, 0, 0);\n  const shadows = children\n    .map((node) => {\n      if (node.type === NodeType.BoxShadow) {\n        return materialize(node.props);\n      }\n      return null;\n    })\n    .filter((n): n is BoxShadowProps => n !== null);\n  shadows\n    .filter((shadow) => !shadow.inner)\n    .map((shadow) => {\n      const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n      const lPaint = Skia.Paint();\n      lPaint.setColor(Skia.Color(color));\n      lPaint.setAlphaf(paint.getAlphaf() * opacity);\n      lPaint.setMaskFilter(\n        Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n      );\n      canvas.drawRRect(inflate(Skia, box, spread, spread, dx, dy), lPaint);\n    });\n\n  canvas.drawRRect(box, paint);\n\n  shadows\n    .filter((shadow) => shadow.inner)\n    .map((shadow) => {\n      const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n      const delta = Skia.Point(10 + Math.abs(dx), 10 + Math.abs(dy));\n      canvas.save();\n      canvas.clipRRect(box, ClipOp.Intersect, false);\n      const lPaint = Skia.Paint();\n      lPaint.setColor(Skia.Color(color));\n      lPaint.setAlphaf(paint.getAlphaf() * opacity);\n\n      lPaint.setMaskFilter(\n        Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n      );\n      const inner = deflate(Skia, box, spread, spread, dx, dy);\n      const outer = inflate(Skia, box, delta.x, delta.y);\n      canvas.drawDRRect(outer, inner, lPaint);\n      canvas.restore();\n    });\n};\n\nexport const drawImage = (ctx: LocalDrawingContext, props: ImageProps) => {\n  \"worklet\";\n  const { image } = props;\n  if (image) {\n    const fit = props.fit ?? \"contain\";\n    const rect = processRect(ctx.Skia, props);\n    const { src, dst } = fitRects(\n      fit,\n      {\n        x: 0,\n        y: 0,\n        width: image.width(),\n        height: image.height(),\n      },\n      rect\n    );\n    ctx.canvas.drawImageRect(image, src, dst, ctx.paint);\n  }\n};\n\nexport const drawPoints = (ctx: LocalDrawingContext, props: PointsProps) => {\n  \"worklet\";\n  const { points, mode } = props;\n  ctx.canvas.drawPoints(PointMode[enumKey(mode)], points, ctx.paint);\n};\n\nexport const drawVertices = (\n  ctx: LocalDrawingContext,\n  props: VerticesProps\n) => {\n  \"worklet\";\n  const { mode, textures, colors, indices, blendMode } = props;\n  const vertexMode = mode ? VertexMode[enumKey(mode)] : VertexMode.Triangles;\n  const vertices = ctx.Skia.MakeVertices(\n    vertexMode,\n    props.vertices,\n    textures,\n    colors ? colors.map((c) => ctx.Skia.Color(c)) : undefined,\n    indices\n  );\n  const defaultBlendMode = colors ? BlendMode.DstOver : BlendMode.SrcOver;\n  const blend = blendMode ? BlendMode[enumKey(blendMode)] : defaultBlendMode;\n\n  ctx.canvas.drawVertices(vertices, blend, ctx.paint);\n};\n\nexport const drawDiffRect = (\n  ctx: LocalDrawingContext,\n  props: DiffRectProps\n) => {\n  \"worklet\";\n  const { outer, inner } = props;\n  ctx.canvas.drawDRRect(outer, inner, ctx.paint);\n};\n\nexport const drawTextPath = (\n  ctx: LocalDrawingContext,\n  props: TextPathProps\n) => {\n  \"worklet\";\n  const path = processPath(ctx.Skia, props.path);\n  const { font, initialOffset } = props;\n  if (font) {\n    let { text } = props;\n    const ids = font.getGlyphIDs(text);\n    const widths = font.getGlyphWidths(ids);\n    const rsx: SkRSXform[] = [];\n    const meas = ctx.Skia.ContourMeasureIter(path, false, 1);\n    let cont = meas.next();\n    let dist = initialOffset;\n    for (let i = 0; i < text.length && cont; i++) {\n      const width = widths[i];\n      dist += width / 2;\n      if (dist > cont.length()) {\n        // jump to next contour\n        cont = meas.next();\n        if (!cont) {\n          // We have come to the end of the path - terminate the string\n          // right here.\n          text = text.substring(0, i);\n          break;\n        }\n        dist = width / 2;\n      }\n      // Gives us the (x, y) coordinates as well as the cos/sin of the tangent\n      // line at that position.\n      const [p, t] = cont.getPosTan(dist);\n      const adjustedX = p.x - (width / 2) * t.x;\n      const adjustedY = p.y - (width / 2) * t.y;\n      rsx.push(ctx.Skia.RSXform(t.x, t.y, adjustedX, adjustedY));\n      dist += width / 2;\n    }\n    const derived = ctx.Skia.TextBlob.MakeFromRSXform(text, rsx, font);\n    ctx.canvas.drawTextBlob(derived, 0, 0, ctx.paint);\n  }\n};\n\nexport const drawText = (ctx: LocalDrawingContext, props: TextProps) => {\n  \"worklet\";\n  const { text, x, y, font } = props;\n  if (font != null) {\n    ctx.canvas.drawText(text, x, y, ctx.paint, font);\n  }\n};\n\nexport const drawPatch = (ctx: LocalDrawingContext, props: PatchProps) => {\n  \"worklet\";\n  const { texture, blendMode, patch } = props;\n  const defaultBlendMode = props.colors ? BlendMode.DstOver : BlendMode.SrcOver;\n  const mode = blendMode ? BlendMode[enumKey(blendMode)] : defaultBlendMode;\n  // Patch requires a path with the following constraints:\n  // M tl\n  // C c1 c2 br\n  // C c1 c2 bl\n  // C c1 c2 tl (the redundant point in the last command is removed)\n\n  const points = [\n    patch[0].pos,\n    patch[0].c2,\n    patch[1].c1,\n    patch[1].pos,\n    patch[1].c2,\n    patch[2].c1,\n    patch[2].pos,\n    patch[2].c2,\n    patch[3].c1,\n    patch[3].pos,\n    patch[3].c2,\n    patch[0].c1,\n  ];\n  const colors = props.colors\n    ? props.colors.map((c) => ctx.Skia.Color(c))\n    : undefined;\n  ctx.canvas.drawPatch(points, colors, texture, mode, ctx.paint);\n};\n\nexport const drawPath = (ctx: LocalDrawingContext, props: PathProps) => {\n  \"worklet\";\n  const {\n    start: trimStart,\n    end: trimEnd,\n    fillType,\n    stroke,\n    ...pathProps\n  } = props;\n  const start = saturate(trimStart);\n  const end = saturate(trimEnd);\n  const hasStartOffset = start !== 0;\n  const hasEndOffset = end !== 1;\n  const hasStrokeOptions = stroke !== undefined;\n  const hasFillType = !!fillType;\n  const willMutatePath =\n    hasStartOffset || hasEndOffset || hasStrokeOptions || hasFillType;\n  const pristinePath = processPath(ctx.Skia, pathProps.path);\n  const path = willMutatePath ? pristinePath.copy() : pristinePath;\n  if (hasFillType) {\n    path.setFillType(FillType[enumKey(fillType)]);\n  }\n  if (hasStrokeOptions) {\n    path.stroke(stroke);\n  }\n  if (hasStartOffset || hasEndOffset) {\n    path.trim(start, end, false);\n  }\n  ctx.canvas.drawPath(path, ctx.paint);\n};\n\nexport const drawRect = (ctx: LocalDrawingContext, props: RectProps) => {\n  \"worklet\";\n  const derived = processRect(ctx.Skia, props);\n  ctx.canvas.drawRect(derived, ctx.paint);\n};\n\nexport const drawRRect = (\n  ctx: LocalDrawingContext,\n  props: RoundedRectProps\n) => {\n  \"worklet\";\n  const derived = processRRect(ctx.Skia, props);\n  ctx.canvas.drawRRect(derived, ctx.paint);\n};\n\nexport const drawTextBlob = (\n  ctx: LocalDrawingContext,\n  props: TextBlobProps\n) => {\n  \"worklet\";\n  const { blob, x, y } = props;\n  ctx.canvas.drawTextBlob(blob, x, y, ctx.paint);\n};\n\ninterface ProcessedGlyphs {\n  glyphs: number[];\n  positions: SkPoint[];\n}\n\nexport const drawGlyphs = (ctx: LocalDrawingContext, props: GlyphsProps) => {\n  \"worklet\";\n  const derived = props.glyphs.reduce<ProcessedGlyphs>(\n    (acc, glyph) => {\n      const { id, pos } = glyph;\n      acc.glyphs.push(id);\n      acc.positions.push(pos);\n      return acc;\n    },\n    { glyphs: [], positions: [] }\n  );\n  const { glyphs, positions } = derived;\n  const { x, y, font } = props;\n  if (font) {\n    ctx.canvas.drawGlyphs(glyphs, positions, x, y, font, ctx.paint);\n  }\n};\n\nexport const drawImageSVG = (\n  ctx: LocalDrawingContext,\n  props: ImageSVGProps\n) => {\n  \"worklet\";\n  const { canvas } = ctx;\n  const { svg } = props;\n  const { x, y, width, height } = props.rect\n    ? props.rect\n    : { x: props.x, y: props.y, width: props.width, height: props.height };\n  if (svg === null) {\n    return;\n  }\n  canvas.save();\n  if (x && y) {\n    canvas.translate(x, y);\n  }\n  canvas.drawSvg(svg, width, height);\n  canvas.restore();\n};\n\nexport const drawParagraph = (\n  ctx: LocalDrawingContext,\n  props: ParagraphProps\n) => {\n  \"worklet\";\n  const { paragraph, x, y, width } = props;\n  if (paragraph) {\n    paragraph.layout(width);\n    paragraph.paint(ctx.canvas, x, y);\n  }\n};\n\nexport const drawPicture = (ctx: LocalDrawingContext, props: PictureProps) => {\n  \"worklet\";\n  const { picture } = props;\n  ctx.canvas.drawPicture(picture);\n};\n\nexport const drawAtlas = (ctx: LocalDrawingContext, props: AtlasProps) => {\n  \"worklet\";\n  const { image, sprites, transforms, colors, blendMode } = props;\n  const blend = blendMode ? BlendMode[enumKey(blendMode)] : undefined;\n  if (image) {\n    ctx.canvas.drawAtlas(image, sprites, transforms, ctx.paint, blend, colors);\n  }\n};\n\nexport const drawCircle = (ctx: LocalDrawingContext, props: CircleProps) => {\n  \"worklet\";\n  const { c } = processCircle(props);\n  const { r } = props;\n  ctx.canvas.drawCircle(c.x, c.y, r, ctx.paint);\n};\n\nexport const drawFill = (\n  ctx: LocalDrawingContext,\n  _props: DrawingNodeProps\n) => {\n  \"worklet\";\n  ctx.canvas.drawPaint(ctx.paint);\n};\n"],"mappings":"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","ignoreList":[]}