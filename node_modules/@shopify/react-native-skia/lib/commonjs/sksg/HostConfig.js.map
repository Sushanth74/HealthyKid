{"version":3,"names":["_constants","require","_types","_typeddash","DEBUG","debug","args","console","log","exports","isDeclaration","type","NodeType","BlurMaskFilter","BlendImageFilter","BlurImageFilter","OffsetImageFilter","DropShadowImageFilter","MorphologyImageFilter","DisplacementMapImageFilter","RuntimeShaderImageFilter","MatrixColorFilter","BlendColorFilter","LumaColorFilter","LinearToSRGBGammaColorFilter","SRGBToLinearGammaColorFilter","LerpColorFilter","Shader","ImageShader","ColorShader","Turbulence","FractalNoise","LinearGradient","RadialGradient","SweepGradient","TwoPointConicalGradient","CornerPathEffect","DiscretePathEffect","DashPathEffect","Path1DPathEffect","Path2DPathEffect","SumPathEffect","Line2DPathEffect","Blend","Paint","sksgHostConfig","supportsMutation","isPrimaryRenderer","supportsPersistence","supportsHydration","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","getRootHostContext","_rootContainerInstance","getChildHostContext","_parentHostContext","_type","shouldSetTextContent","_props","createTextInstance","_text","_hostContext","_internalInstanceHandle","Error","createInstance","props","container","registerValues","instance","children","appendInitialChild","parentInstance","child","push","finalizeInitialChildren","commitMount","prepareForCommit","_containerInfo","resetAfterCommit","redraw","getPublicInstance","node","commitTextUpdate","_textInstance","_oldText","_newText","clearContainer","clear","prepareUpdate","_instance","oldProps","newProps","propsAreEqual","shallowEq","unregisterValues","preparePortalMount","cloneInstance","_updatePayload","_oldProps","keepChildren","_recyclableInstance","createContainerChildSet","appendChildToContainerChildSet","childSet","finalizeContainerChildren","newChildren","root","replaceContainerChildren","cloneHiddenInstance","cloneHiddenTextInstance","getCurrentEventPriority","DefaultEventPriority","beforeActiveInstanceBlur","afterActiveInstanceBlur","detachDeletedInstance","getInstanceFromNode","_node","prepareScopeUpdate","_scopeInstance","getInstanceFromScope"],"sources":["HostConfig.ts"],"sourcesContent":["/*global NodeJS*/\nimport type { Fiber, HostConfig } from \"react-reconciler\";\nimport { DefaultEventPriority } from \"react-reconciler/constants\";\n\nimport { NodeType } from \"../dom/types\";\nimport { shallowEq } from \"../renderer/typeddash\";\n\nimport type { Node } from \"./nodes/Node\";\nimport type { Container } from \"./Container\";\n\nconst DEBUG = false;\nexport const debug = (...args: Parameters<typeof console.log>) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\nconst isDeclaration = (type: NodeType) => {\n  \"worklet\";\n  return (\n    // BlurMaskFilters\n    type === NodeType.BlurMaskFilter ||\n    // ImageFilters\n    type === NodeType.BlendImageFilter ||\n    type === NodeType.BlurImageFilter ||\n    type === NodeType.OffsetImageFilter ||\n    type === NodeType.DropShadowImageFilter ||\n    type === NodeType.MorphologyImageFilter ||\n    type === NodeType.DisplacementMapImageFilter ||\n    type === NodeType.RuntimeShaderImageFilter ||\n    // ColorFilters\n    type === NodeType.MatrixColorFilter ||\n    type === NodeType.BlendColorFilter ||\n    type === NodeType.LumaColorFilter ||\n    type === NodeType.LinearToSRGBGammaColorFilter ||\n    type === NodeType.SRGBToLinearGammaColorFilter ||\n    type === NodeType.LerpColorFilter ||\n    // Shaders\n    type === NodeType.Shader ||\n    type === NodeType.ImageShader ||\n    type === NodeType.ColorShader ||\n    type === NodeType.Turbulence ||\n    type === NodeType.FractalNoise ||\n    type === NodeType.LinearGradient ||\n    type === NodeType.RadialGradient ||\n    type === NodeType.SweepGradient ||\n    type === NodeType.TwoPointConicalGradient ||\n    // Path Effects\n    type === NodeType.CornerPathEffect ||\n    type === NodeType.DiscretePathEffect ||\n    type === NodeType.DashPathEffect ||\n    type === NodeType.Path1DPathEffect ||\n    type === NodeType.Path2DPathEffect ||\n    type === NodeType.SumPathEffect ||\n    type === NodeType.Line2DPathEffect ||\n    // Mixed\n    type === NodeType.Blend ||\n    // Paint\n    type === NodeType.Paint\n  );\n};\n\ntype Instance = Node;\n\ntype Props = object;\ntype TextInstance = Node;\ntype SuspenseInstance = Instance;\ntype HydratableInstance = Instance;\ntype PublicInstance = Instance;\ntype HostContext = null;\ntype UpdatePayload = Container;\ntype ChildSet = Node[];\ntype TimeoutHandle = NodeJS.Timeout;\ntype NoTimeout = -1;\n\ntype SkiaHostConfig = HostConfig<\n  NodeType,\n  Props,\n  Container,\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  HydratableInstance,\n  PublicInstance,\n  HostContext,\n  UpdatePayload,\n  ChildSet,\n  TimeoutHandle,\n  NoTimeout\n>;\n\nexport const sksgHostConfig: SkiaHostConfig = {\n  /**\n   * This function is used by the reconciler in order to calculate current time for prioritising work.\n   */\n  supportsMutation: false,\n  isPrimaryRenderer: false,\n  supportsPersistence: true,\n  supportsHydration: false,\n  //supportsMicrotask: true,\n  scheduleTimeout: setTimeout,\n  cancelTimeout: clearTimeout,\n  noTimeout: -1,\n\n  getRootHostContext: (_rootContainerInstance: Container) => {\n    debug(\"getRootHostContext\");\n    return null;\n  },\n\n  getChildHostContext(_parentHostContext, _type, _rootContainerInstance) {\n    debug(\"getChildHostContext\");\n    return null;\n  },\n\n  shouldSetTextContent(_type, _props) {\n    return false;\n  },\n\n  createTextInstance(\n    _text,\n    _rootContainerInstance,\n    _hostContext,\n    _internalInstanceHandle\n  ) {\n    debug(\"createTextInstance\");\n    // return SpanNode({}, text) as SkNode;\n    throw new Error(\"Text nodes are not supported yet\");\n  },\n\n  createInstance(\n    type,\n    props,\n    container,\n    _hostContext,\n    _internalInstanceHandle\n  ) {\n    debug(\"createInstance\", type);\n    container.registerValues(props);\n    const instance = {\n      type,\n      isDeclaration: isDeclaration(type),\n      props,\n      children: [],\n    };\n    return instance;\n  },\n\n  appendInitialChild(parentInstance: Instance, child: Instance | TextInstance) {\n    parentInstance.children.push(child);\n  },\n\n  finalizeInitialChildren(\n    parentInstance,\n    _type,\n    _props,\n    _rootContainerInstance,\n    _hostContext\n  ) {\n    debug(\"finalizeInitialChildren\", parentInstance);\n    return false;\n  },\n\n  commitMount() {\n    // if finalizeInitialChildren = true\n    debug(\"commitMount\");\n  },\n\n  prepareForCommit(_containerInfo) {\n    debug(\"prepareForCommit\");\n    return null;\n  },\n\n  resetAfterCommit(container) {\n    debug(\"resetAfterCommit\");\n    container.redraw();\n  },\n\n  getPublicInstance(node: Instance) {\n    debug(\"getPublicInstance\");\n    return node;\n  },\n\n  commitTextUpdate: (\n    _textInstance: TextInstance,\n    _oldText: string,\n    _newText: string\n  ) => {\n    //  textInstance.instance = newText;\n  },\n\n  clearContainer: (container) => {\n    debug(\"clearContainer\");\n    container.clear();\n  },\n\n  prepareUpdate(\n    _instance: Instance,\n    _type: string,\n    oldProps: Props,\n    newProps: Props,\n    container: Container,\n    _hostContext: HostContext\n  ) {\n    debug(\"prepareUpdate\");\n    const propsAreEqual = shallowEq(oldProps, newProps);\n    if (propsAreEqual) {\n      return null;\n    }\n    container.unregisterValues(oldProps);\n    container.registerValues(newProps);\n    return container;\n  },\n\n  preparePortalMount: () => {\n    debug(\"preparePortalMount\");\n  },\n\n  cloneInstance(\n    instance,\n    _updatePayload,\n    _type,\n    _oldProps,\n    newProps,\n    _internalInstanceHandle,\n    keepChildren: boolean,\n    _recyclableInstance: null | Instance\n  ) {\n    debug(\"cloneInstance\");\n\n    return {\n      type: instance.type,\n      props: newProps,\n      children: keepChildren ? [...instance.children] : [],\n      isDeclaration: instance.isDeclaration,\n    };\n  },\n\n  createContainerChildSet(): ChildSet {\n    debug(\"createContainerChildSet\");\n    return [];\n  },\n\n  appendChildToContainerChildSet(\n    childSet: ChildSet,\n    child: Instance | TextInstance\n  ): void {\n    childSet.push(child);\n  },\n\n  finalizeContainerChildren(container: Container, newChildren: ChildSet) {\n    debug(\"finalizeContainerChildren\");\n    container.root = newChildren;\n  },\n\n  replaceContainerChildren(container: Container, newChildren: ChildSet) {\n    debug(\"replaceContainerChildren\");\n    container.root = newChildren;\n  },\n\n  cloneHiddenInstance(\n    _instance: Instance,\n    _type: string,\n    _props: Props\n  ): Instance {\n    debug(\"cloneHiddenInstance\");\n    throw new Error(\"Not yet implemented.\");\n  },\n\n  cloneHiddenTextInstance(_instance: Instance, _text: string): TextInstance {\n    debug(\"cloneHiddenTextInstance\");\n    throw new Error(\"Not yet implemented.\");\n  },\n  // see https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r916356874\n  getCurrentEventPriority: () => DefaultEventPriority,\n  beforeActiveInstanceBlur: () => {},\n  afterActiveInstanceBlur: () => {},\n  detachDeletedInstance: () => {},\n  getInstanceFromNode: function (_node): Fiber | null | undefined {\n    throw new Error(\"Function not implemented.\");\n  },\n  prepareScopeUpdate: function (_scopeInstance, _instance): void {\n    throw new Error(\"Function not implemented.\");\n  },\n  getInstanceFromScope: function (_scopeInstance): Instance | null {\n    throw new Error(\"Function not implemented.\");\n  },\n};\n"],"mappings":"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","ignoreList":[]}