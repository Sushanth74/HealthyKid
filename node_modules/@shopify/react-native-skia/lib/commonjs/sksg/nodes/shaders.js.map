{"version":3,"names":["_nodes","require","_types","declareShader","ctx","props","source","uniforms","transform","m3","Skia","Matrix","processTransformProps","shader","makeShaderWithChildren","processUniforms","shaders","popAll","push","exports","declareColorShader","color","Shader","MakeColor","Color","declareFractalNoiseShader","freqX","freqY","octaves","seed","tileWidth","tileHeight","MakeFractalNoise","declareTwoPointConicalGradientShader","startR","endR","start","end","colors","positions","mode","localMatrix","flags","processGradientProps","MakeTwoPointConicalGradient","declareRadialGradientShader","c","r","MakeRadialGradient","declareSweepGradientShader","MakeSweepGradient","x","y","declareLinearGradientShader","MakeLinearGradient","declareTurbulenceShader","MakeTurbulence","declareImageShader","fit","image","tx","ty","fm","mm","imageShaderProps","rct","getRect","rects","fitRects","width","height","sx","sy","rect2rect","src","dst","translate","translateX","translateY","scale","scaleX","scaleY","lm","concat","makeShaderOptions","TileMode","enumKey","FilterMode","MipmapMode"],"sources":["shaders.ts"],"sourcesContent":["import {\n  enumKey,\n  fitRects,\n  getRect,\n  processGradientProps,\n  processTransformProps,\n  rect2rect,\n} from \"../../dom/nodes\";\nimport type {\n  ColorProps,\n  FractalNoiseProps,\n  ImageShaderProps,\n  LinearGradientProps,\n  RadialGradientProps,\n  ShaderProps,\n  SweepGradientProps,\n  TurbulenceProps,\n  TwoPointConicalGradientProps,\n} from \"../../dom/types\";\nimport {\n  FilterMode,\n  MipmapMode,\n  processUniforms,\n  TileMode,\n} from \"../../skia/types\";\nimport type { DeclarationContext } from \"../DeclarationContext\";\n\nexport const declareShader = (ctx: DeclarationContext, props: ShaderProps) => {\n  \"worklet\";\n  const { source, uniforms, ...transform } = props;\n  const m3 = ctx.Skia.Matrix();\n  processTransformProps(m3, transform);\n  const shader = source.makeShaderWithChildren(\n    processUniforms(source, uniforms),\n    ctx.shaders.popAll(),\n    m3\n  );\n  ctx.shaders.push(shader);\n};\n\nexport const declareColorShader = (\n  ctx: DeclarationContext,\n  props: ColorProps\n) => {\n  \"worklet\";\n  const { color } = props;\n  const shader = ctx.Skia.Shader.MakeColor(ctx.Skia.Color(color));\n  ctx.shaders.push(shader);\n};\n\nexport const declareFractalNoiseShader = (\n  ctx: DeclarationContext,\n  props: FractalNoiseProps\n) => {\n  \"worklet\";\n  const { freqX, freqY, octaves, seed, tileWidth, tileHeight } = props;\n  const shader = ctx.Skia.Shader.MakeFractalNoise(\n    freqX,\n    freqY,\n    octaves,\n    seed,\n    tileWidth,\n    tileHeight\n  );\n  ctx.shaders.push(shader);\n};\n\nexport const declareTwoPointConicalGradientShader = (\n  ctx: DeclarationContext,\n  props: TwoPointConicalGradientProps\n) => {\n  \"worklet\";\n  const { startR, endR, start, end } = props;\n  const { colors, positions, mode, localMatrix, flags } = processGradientProps(\n    ctx.Skia,\n    props\n  );\n  const shader = ctx.Skia.Shader.MakeTwoPointConicalGradient(\n    start,\n    startR,\n    end,\n    endR,\n    colors,\n    positions,\n    mode,\n    localMatrix,\n    flags\n  );\n  ctx.shaders.push(shader);\n};\n\nexport const declareRadialGradientShader = (\n  ctx: DeclarationContext,\n  props: RadialGradientProps\n) => {\n  \"worklet\";\n  const { c, r } = props;\n  const { colors, positions, mode, localMatrix, flags } = processGradientProps(\n    ctx.Skia,\n    props\n  );\n  const shader = ctx.Skia.Shader.MakeRadialGradient(\n    c,\n    r,\n    colors,\n    positions,\n    mode,\n    localMatrix,\n    flags\n  );\n  ctx.shaders.push(shader);\n};\n\nexport const declareSweepGradientShader = (\n  ctx: DeclarationContext,\n  props: SweepGradientProps\n) => {\n  \"worklet\";\n  const { c, start, end } = props;\n  const { colors, positions, mode, localMatrix, flags } = processGradientProps(\n    ctx.Skia,\n    props\n  );\n  const shader = ctx.Skia.Shader.MakeSweepGradient(\n    c.x,\n    c.y,\n    colors,\n    positions,\n    mode,\n    localMatrix,\n    flags,\n    start,\n    end\n  );\n  ctx.shaders.push(shader);\n};\n\nexport const declareLinearGradientShader = (\n  ctx: DeclarationContext,\n  props: LinearGradientProps\n) => {\n  \"worklet\";\n  const { start, end } = props;\n  const { colors, positions, mode, localMatrix, flags } = processGradientProps(\n    ctx.Skia,\n    props\n  );\n  const shader = ctx.Skia.Shader.MakeLinearGradient(\n    start,\n    end,\n    colors,\n    positions ?? null,\n    mode,\n    localMatrix,\n    flags\n  );\n  ctx.shaders.push(shader);\n};\n\nexport const declareTurbulenceShader = (\n  ctx: DeclarationContext,\n  props: TurbulenceProps\n) => {\n  \"worklet\";\n  const { freqX, freqY, octaves, seed, tileWidth, tileHeight } = props;\n  const shader = ctx.Skia.Shader.MakeTurbulence(\n    freqX,\n    freqY,\n    octaves,\n    seed,\n    tileWidth,\n    tileHeight\n  );\n  ctx.shaders.push(shader);\n};\n\nexport const declareImageShader = (\n  ctx: DeclarationContext,\n  props: ImageShaderProps\n) => {\n  \"worklet\";\n  const { fit, image, tx, ty, fm, mm, ...imageShaderProps } = props;\n  if (!image) {\n    return;\n  }\n\n  const rct = getRect(ctx.Skia, imageShaderProps);\n  const m3 = ctx.Skia.Matrix();\n  if (rct) {\n    const rects = fitRects(\n      fit,\n      { x: 0, y: 0, width: image.width(), height: image.height() },\n      rct\n    );\n    const [x, y, sx, sy] = rect2rect(rects.src, rects.dst);\n    m3.translate(x.translateX, y.translateY);\n    m3.scale(sx.scaleX, sy.scaleY);\n  }\n  const lm = ctx.Skia.Matrix();\n  lm.concat(m3);\n  processTransformProps(lm, imageShaderProps);\n  const shader = image.makeShaderOptions(\n    TileMode[enumKey(tx)],\n    TileMode[enumKey(ty)],\n    FilterMode[enumKey(fm)],\n    MipmapMode[enumKey(mm)],\n    lm\n  );\n  ctx.shaders.push(shader);\n};\n"],"mappings":"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","ignoreList":[]}