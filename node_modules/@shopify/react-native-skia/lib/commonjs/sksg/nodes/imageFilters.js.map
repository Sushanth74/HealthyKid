{"version":3,"names":["_nodes","require","_types","_DeclarationContext","MorphologyOperator","exports","Black","Float32Array","of","MakeInnerShadow","Skia","shadowOnly","dx","dy","sigmaX","sigmaY","color","input","sourceGraphic","ImageFilter","MakeColorFilter","ColorFilter","MakeBlend","BlendMode","Dst","sourceAlpha","SrcIn","f1","SrcOut","f2","MakeOffset","f3","MakeBlur","TileMode","Decal","f4","MakeCompose","SrcOver","declareBlend","ctx","props","blend","enumKey","mode","imageFilters","popAll","length","composer","bind","push","composeDeclarations","shaders","Shader","composeImageFilters","imgf1","processChildren","save","colorFilters","imgf2","popAllAsOne","cf","restore","_imgf","imgf","_ctx$imageFilters$pop","pop","makeOffsetImageFilter","x","y","declareDisplacementMapImageFilter","channelX","channelY","scale","shader","Error","map","MakeShader","MakeDisplacementMap","ColorChannel","makeBlurImageFilter","blur","sigma","processRadius","makeDropShadowImageFilter","cl","inner","Color","factory","MakeDropShadowOnly","MakeDropShadow","makeMorphologyImageFilter","operator","r","radius","Erode","MakeErode","MakeDilate","makeRuntimeShaderImageFilter","source","uniforms","rtb","RuntimeShaderBuilder","processUniforms","MakeRuntimeShader","declareBlendImageFilter","a","b","declareBlurMaskFilter","style","respectCTM","mf","MaskFilter","BlurStyle","maskFilters"],"sources":["imageFilters.ts"],"sourcesContent":["import { enumKey, processRadius } from \"../../dom/nodes\";\nimport type {\n  BlendImageFilterProps,\n  BlendProps,\n  BlurImageFilterProps,\n  BlurMaskFilterProps,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  MorphologyImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n} from \"../../dom/types\";\nimport type { SkColor, Skia, SkImageFilter } from \"../../skia/types\";\nimport {\n  BlendMode,\n  BlurStyle,\n  ColorChannel,\n  processUniforms,\n  TileMode,\n} from \"../../skia/types\";\nimport type { DeclarationContext } from \"../DeclarationContext\";\nimport { composeDeclarations } from \"../DeclarationContext\";\n\nexport enum MorphologyOperator {\n  Erode,\n  Dilate,\n}\n\nconst Black = Float32Array.of(0, 0, 0, 1);\n\nconst MakeInnerShadow = (\n  Skia: Skia,\n  shadowOnly: boolean | undefined,\n  dx: number,\n  dy: number,\n  sigmaX: number,\n  sigmaY: number,\n  color: SkColor,\n  input: SkImageFilter | null\n) => {\n  \"worklet\";\n  const sourceGraphic = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.Dst),\n    null\n  );\n  const sourceAlpha = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.SrcIn),\n    null\n  );\n  const f1 = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(color, BlendMode.SrcOut),\n    null\n  );\n  const f2 = Skia.ImageFilter.MakeOffset(dx, dy, f1);\n  const f3 = Skia.ImageFilter.MakeBlur(sigmaX, sigmaY, TileMode.Decal, f2);\n  const f4 = Skia.ImageFilter.MakeBlend(BlendMode.SrcIn, sourceAlpha, f3);\n  if (shadowOnly) {\n    return f4;\n  }\n  return Skia.ImageFilter.MakeCompose(\n    input,\n    Skia.ImageFilter.MakeBlend(BlendMode.SrcOver, sourceGraphic, f4)\n  );\n};\n\nexport const declareBlend = (ctx: DeclarationContext, props: BlendProps) => {\n  \"worklet\";\n  const { Skia } = ctx;\n  const blend = BlendMode[enumKey(props.mode as BlendProps[\"mode\"])];\n  // Blend ImageFilters\n  const imageFilters = ctx.imageFilters.popAll();\n  if (imageFilters.length > 0) {\n    const composer = Skia.ImageFilter.MakeBlend.bind(Skia.ImageFilter, blend);\n    ctx.imageFilters.push(composeDeclarations(imageFilters, composer));\n  }\n  // Blend Shaders\n  const shaders = ctx.shaders.popAll();\n  if (shaders.length > 0) {\n    const composer = Skia.Shader.MakeBlend.bind(Skia.Shader, blend);\n    ctx.shaders.push(composeDeclarations(shaders, composer));\n  }\n};\n\nexport const composeImageFilters = (\n  ctx: DeclarationContext,\n  imgf1: SkImageFilter,\n  processChildren: () => void\n) => {\n  \"worklet\";\n  const { Skia } = ctx;\n  ctx.imageFilters.save();\n  ctx.colorFilters.save();\n  processChildren();\n  let imgf2 = ctx.imageFilters.popAllAsOne();\n  const cf = ctx.colorFilters.popAllAsOne();\n  ctx.imageFilters.restore();\n  ctx.colorFilters.restore();\n  if (cf) {\n    imgf2 = Skia.ImageFilter.MakeCompose(\n      imgf2 ?? null,\n      Skia.ImageFilter.MakeColorFilter(cf, null)\n    );\n  }\n  const imgf = imgf2 ? Skia.ImageFilter.MakeCompose(imgf1, imgf2) : imgf1;\n  ctx.imageFilters.push(imgf);\n};\n\nconst input = (ctx: DeclarationContext) => {\n  \"worklet\";\n  return ctx.imageFilters.pop() ?? null;\n};\n\nexport const makeOffsetImageFilter = (\n  ctx: DeclarationContext,\n  props: OffsetImageFilterProps\n) => {\n  \"worklet\";\n  const { x, y } = props;\n  return ctx.Skia.ImageFilter.MakeOffset(x, y, null);\n};\n\nexport const declareDisplacementMapImageFilter = (\n  ctx: DeclarationContext,\n  props: DisplacementMapImageFilterProps\n) => {\n  \"worklet\";\n  const { channelX, channelY, scale } = props;\n  const shader = ctx.shaders.pop();\n  if (!shader) {\n    throw new Error(\"DisplacementMap expects a shader as child\");\n  }\n  const map = ctx.Skia.ImageFilter.MakeShader(shader, null);\n  const imgf = ctx.Skia.ImageFilter.MakeDisplacementMap(\n    ColorChannel[enumKey(channelX)],\n    ColorChannel[enumKey(channelY)],\n    scale,\n    map,\n    input(ctx)\n  );\n  ctx.imageFilters.push(imgf);\n};\n\nexport const makeBlurImageFilter = (\n  ctx: DeclarationContext,\n  props: BlurImageFilterProps\n) => {\n  \"worklet\";\n  const { mode, blur } = props;\n  const sigma = processRadius(ctx.Skia, blur);\n  const imgf = ctx.Skia.ImageFilter.MakeBlur(\n    sigma.x,\n    sigma.y,\n    TileMode[enumKey(mode)],\n    input(ctx)\n  );\n  return imgf;\n};\n\nexport const makeDropShadowImageFilter = (\n  ctx: DeclarationContext,\n  props: DropShadowImageFilterProps\n) => {\n  \"worklet\";\n  const { dx, dy, blur, shadowOnly, color: cl, inner } = props;\n  const color = ctx.Skia.Color(cl);\n  let factory;\n  if (inner) {\n    factory = MakeInnerShadow.bind(null, ctx.Skia, shadowOnly);\n  } else {\n    factory = shadowOnly\n      ? ctx.Skia.ImageFilter.MakeDropShadowOnly.bind(ctx.Skia.ImageFilter)\n      : ctx.Skia.ImageFilter.MakeDropShadow.bind(ctx.Skia.ImageFilter);\n  }\n  const imgf = factory(dx, dy, blur, blur, color, input(ctx));\n  return imgf;\n};\n\nexport const makeMorphologyImageFilter = (\n  ctx: DeclarationContext,\n  props: MorphologyImageFilterProps\n) => {\n  \"worklet\";\n  const { operator } = props;\n  const r = processRadius(ctx.Skia, props.radius);\n  let imgf;\n  if (MorphologyOperator[enumKey(operator)] === MorphologyOperator.Erode) {\n    imgf = ctx.Skia.ImageFilter.MakeErode(r.x, r.y, input(ctx));\n  } else {\n    imgf = ctx.Skia.ImageFilter.MakeDilate(r.x, r.y, input(ctx));\n  }\n  return imgf;\n};\n\nexport const makeRuntimeShaderImageFilter = (\n  ctx: DeclarationContext,\n  props: RuntimeShaderImageFilterProps\n) => {\n  \"worklet\";\n  const { source, uniforms } = props;\n  const rtb = ctx.Skia.RuntimeShaderBuilder(source);\n  if (uniforms) {\n    processUniforms(source, uniforms, rtb);\n  }\n  const imgf = ctx.Skia.ImageFilter.MakeRuntimeShader(rtb, null, input(ctx));\n  return imgf;\n};\n\nexport const declareBlendImageFilter = (\n  ctx: DeclarationContext,\n  props: BlendImageFilterProps\n) => {\n  \"worklet\";\n  const { mode } = props;\n  const a = ctx.imageFilters.pop();\n  const b = ctx.imageFilters.pop();\n  if (!a || !b) {\n    throw new Error(\"BlendImageFilter requires two image filters\");\n  }\n  const imgf = ctx.Skia.ImageFilter.MakeBlend(mode, a, b);\n  ctx.imageFilters.push(imgf);\n};\n\nexport const declareBlurMaskFilter = (\n  ctx: DeclarationContext,\n  props: BlurMaskFilterProps\n) => {\n  \"worklet\";\n  const { blur, style, respectCTM } = props;\n  const mf = ctx.Skia.MaskFilter.MakeBlur(\n    BlurStyle[enumKey(style)],\n    blur,\n    respectCTM\n  );\n  ctx.maskFilters.push(mf);\n};\n"],"mappings":"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","ignoreList":[]}