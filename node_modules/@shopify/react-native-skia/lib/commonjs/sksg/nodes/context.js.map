{"version":3,"names":["_types","require","_DeclarationContext","_drawings","_colorFilters","_imageFilters","_utils","_shaders","_paint","_pathEffects","processDeclarations","ctx","node","processChildren","children","forEach","child","type","props","materialize","NodeType","BlurMaskFilter","declareBlurMaskFilter","LerpColorFilter","declareLerpColorFilter","Blend","declareBlend","BlendColorFilter","cf","makeBlendColorFilter","composeColorFilters","SRGBToLinearGammaColorFilter","makeSRGBToLinearGammaColorFilter","LinearToSRGBGammaColorFilter","makeLinearToSRGBGammaColorFilter","MatrixColorFilter","makeMatrixColorFilter","LumaColorFilter","makeLumaColorFilter","Shader","declareShader","ImageShader","declareImageShader","ColorShader","declareColorShader","Turbulence","declareTurbulenceShader","FractalNoise","declareFractalNoiseShader","LinearGradient","declareLinearGradientShader","RadialGradient","declareRadialGradientShader","SweepGradient","declareSweepGradientShader","TwoPointConicalGradient","declareTwoPointConicalGradientShader","BlurImageFilter","imgf","makeBlurImageFilter","composeImageFilters","OffsetImageFilter","makeOffsetImageFilter","DisplacementMapImageFilter","declareDisplacementMapImageFilter","DropShadowImageFilter","makeDropShadowImageFilter","MorphologyImageFilter","makeMorphologyImageFilter","BlendImageFilter","declareBlendImageFilter","RuntimeShaderImageFilter","makeRuntimeShaderImageFilter","SumPathEffect","declareSumPathEffect","CornerPathEffect","pf","makeCornerPathEffect","composePathEffects","Path1DPathEffect","makePath1DPathEffect","Path2DPathEffect","makePath2DPathEffect","Line2DPathEffect","makeLine2DPathEffect","DashPathEffect","makeDashPathEffect","DiscretePathEffect","makeDiscretePathEffect","Paint","declarePaint","console","log","preProcessContext","shouldRestoreMatrix","processMatrixAndClipping","layer","declCtx","createDeclarationContext","Skia","isDeclaration","shouldRestorePaint","processPaint","extraPaints","paints","popAll","drawBackdropFilter","canvas","imageFilter","imageFilters","pop","colorFilters","ImageFilter","MakeColorFilter","saveLayer","undefined","restore","draw","BackdropFilter","Layer","hasLayer","paint","map","rawProps","getPaint","lctx","Box","drawBox","Image","drawImage","Points","drawPoints","Path","drawPath","Rect","drawRect","RRect","drawRRect","Oval","drawOval","Line","drawLine","Patch","drawPatch","Vertices","drawVertices","DiffRect","drawDiffRect","Text","drawText","TextPath","drawTextPath","TextBlob","drawTextBlob","Glyphs","drawGlyphs","Picture","drawPicture","ImageSVG","drawImageSVG","Paragraph","drawParagraph","Atlas","drawAtlas","Circle","drawCircle","Fill","drawFill","Group","warn"],"sources":["context.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { NodeType } from \"../../dom/types\";\nimport type { DrawingNodeProps } from \"../../dom/types\";\nimport type { DrawingContext } from \"../DrawingContext\";\nimport type { SkImageFilter } from \"../../skia/types\";\nimport {\n  createDeclarationContext,\n  type DeclarationContext,\n} from \"../DeclarationContext\";\n\nimport type { Node } from \"./Node\";\nimport {\n  drawAtlas,\n  drawBox,\n  drawCircle,\n  drawDiffRect,\n  drawFill,\n  drawGlyphs,\n  drawImage,\n  drawImageSVG,\n  drawLine,\n  drawOval,\n  drawParagraph,\n  drawPatch,\n  drawPath,\n  drawPicture,\n  drawPoints,\n  drawRect,\n  drawRRect,\n  drawText,\n  drawTextBlob,\n  drawTextPath,\n  drawVertices,\n} from \"./drawings\";\nimport {\n  composeColorFilters,\n  declareLerpColorFilter,\n  makeBlendColorFilter,\n  makeLinearToSRGBGammaColorFilter,\n  makeLumaColorFilter,\n  makeMatrixColorFilter,\n  makeSRGBToLinearGammaColorFilter,\n} from \"./colorFilters\";\nimport {\n  composeImageFilters,\n  declareBlend,\n  declareBlendImageFilter,\n  declareBlurMaskFilter,\n  declareDisplacementMapImageFilter,\n  makeBlurImageFilter,\n  makeDropShadowImageFilter,\n  makeMorphologyImageFilter,\n  makeOffsetImageFilter,\n  makeRuntimeShaderImageFilter,\n} from \"./imageFilters\";\nimport { materialize } from \"./utils\";\nimport {\n  declareColorShader,\n  declareFractalNoiseShader,\n  declareImageShader,\n  declareLinearGradientShader,\n  declareRadialGradientShader,\n  declareShader,\n  declareSweepGradientShader,\n  declareTurbulenceShader,\n  declareTwoPointConicalGradientShader,\n} from \"./shaders\";\nimport { declarePaint } from \"./paint\";\nimport {\n  composePathEffects,\n  declareSumPathEffect,\n  makeCornerPathEffect,\n  makeDashPathEffect,\n  makeDiscretePathEffect,\n  makeLine2DPathEffect,\n  makePath1DPathEffect,\n  makePath2DPathEffect,\n} from \"./pathEffects\";\n\nfunction processDeclarations(ctx: DeclarationContext, node: Node<any>) {\n  \"worklet\";\n  const processChildren = () =>\n    node.children.forEach((child) => processDeclarations(ctx, child));\n  const { type } = node;\n  const props = materialize(node.props);\n  switch (type) {\n    // Mask Filter\n    case NodeType.BlurMaskFilter: {\n      declareBlurMaskFilter(ctx, props);\n      break;\n    }\n    // Color Filters\n    case NodeType.LerpColorFilter: {\n      processChildren();\n      declareLerpColorFilter(ctx, props);\n      break;\n    }\n    case NodeType.Blend: {\n      processChildren();\n      declareBlend(ctx, props);\n      break;\n    }\n    case NodeType.BlendColorFilter: {\n      const cf = makeBlendColorFilter(ctx, props);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.SRGBToLinearGammaColorFilter: {\n      const cf = makeSRGBToLinearGammaColorFilter(ctx);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.LinearToSRGBGammaColorFilter: {\n      const cf = makeLinearToSRGBGammaColorFilter(ctx);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.MatrixColorFilter: {\n      const cf = makeMatrixColorFilter(ctx, props);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    case NodeType.LumaColorFilter: {\n      const cf = makeLumaColorFilter(ctx);\n      composeColorFilters(ctx, cf, processChildren);\n      break;\n    }\n    // Shaders\n    case NodeType.Shader: {\n      processChildren();\n      declareShader(ctx, props);\n      break;\n    }\n    case NodeType.ImageShader: {\n      declareImageShader(ctx, props);\n      break;\n    }\n    case NodeType.ColorShader: {\n      declareColorShader(ctx, props);\n      break;\n    }\n    case NodeType.Turbulence: {\n      declareTurbulenceShader(ctx, props);\n      break;\n    }\n    case NodeType.FractalNoise: {\n      declareFractalNoiseShader(ctx, props);\n      break;\n    }\n    case NodeType.LinearGradient: {\n      declareLinearGradientShader(ctx, props);\n      break;\n    }\n    case NodeType.RadialGradient: {\n      declareRadialGradientShader(ctx, props);\n      break;\n    }\n    case NodeType.SweepGradient: {\n      declareSweepGradientShader(ctx, props);\n      break;\n    }\n    case NodeType.TwoPointConicalGradient: {\n      declareTwoPointConicalGradientShader(ctx, props);\n      break;\n    }\n    // Image Filters\n    case NodeType.BlurImageFilter: {\n      const imgf = makeBlurImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.OffsetImageFilter: {\n      const imgf = makeOffsetImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.DisplacementMapImageFilter: {\n      processChildren();\n      declareDisplacementMapImageFilter(ctx, props);\n      break;\n    }\n    case NodeType.DropShadowImageFilter: {\n      const imgf = makeDropShadowImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.MorphologyImageFilter: {\n      const imgf = makeMorphologyImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    case NodeType.BlendImageFilter: {\n      processChildren();\n      declareBlendImageFilter(ctx, props);\n      break;\n    }\n    case NodeType.RuntimeShaderImageFilter: {\n      const imgf = makeRuntimeShaderImageFilter(ctx, props);\n      composeImageFilters(ctx, imgf, processChildren);\n      break;\n    }\n    // Path Effects\n    case NodeType.SumPathEffect: {\n      processChildren();\n      declareSumPathEffect(ctx);\n      break;\n    }\n    case NodeType.CornerPathEffect: {\n      const pf = makeCornerPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.Path1DPathEffect: {\n      const pf = makePath1DPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.Path2DPathEffect: {\n      const pf = makePath2DPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.Line2DPathEffect: {\n      const pf = makeLine2DPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.DashPathEffect: {\n      const pf = makeDashPathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    case NodeType.DiscretePathEffect: {\n      const pf = makeDiscretePathEffect(ctx, props);\n      composePathEffects(ctx, pf, processChildren);\n      break;\n    }\n    // Paint\n    case NodeType.Paint:\n      processChildren();\n      declarePaint(ctx, props);\n      break;\n    default:\n      console.log(\"Unknown declaration node: \", type);\n  }\n}\n\nconst preProcessContext = (\n  ctx: DrawingContext,\n  props: DrawingNodeProps,\n  node: Node<any>\n) => {\n  \"worklet\";\n  const shouldRestoreMatrix = ctx.processMatrixAndClipping(props, props.layer);\n  const declCtx = createDeclarationContext(ctx.Skia);\n  node.children.forEach((child) => {\n    if (child.isDeclaration) {\n      processDeclarations(declCtx, child);\n    }\n  });\n  const shouldRestorePaint = ctx.processPaint(props, declCtx);\n  return {\n    shouldRestoreMatrix,\n    shouldRestorePaint,\n    extraPaints: declCtx.paints.popAll(),\n  };\n};\n\nconst drawBackdropFilter = (ctx: DrawingContext, node: Node) => {\n  \"worklet\";\n  const { canvas, Skia } = ctx;\n  const child = node.children[0];\n  let imageFilter: SkImageFilter | null = null;\n  if (child.isDeclaration) {\n    const declCtx = createDeclarationContext(ctx.Skia);\n    processDeclarations(declCtx, child);\n    const imgf = declCtx.imageFilters.pop();\n    if (imgf) {\n      imageFilter = imgf;\n    } else {\n      const cf = declCtx.colorFilters.pop();\n      if (cf) {\n        imageFilter = Skia.ImageFilter.MakeColorFilter(cf, null);\n      }\n    }\n  }\n  canvas.saveLayer(undefined, null, imageFilter);\n  canvas.restore();\n};\n\nexport function draw(ctx: DrawingContext, node: Node<any>) {\n  \"worklet\";\n  // Special mixed nodes\n  if (node.type === NodeType.BackdropFilter) {\n    drawBackdropFilter(ctx, node);\n    return;\n  }\n  if (node.type === NodeType.Layer) {\n    let hasLayer = false;\n    const [layer, ...children] = node.children;\n    if (layer.isDeclaration) {\n      const declCtx = createDeclarationContext(ctx.Skia);\n      processDeclarations(declCtx, layer);\n      const paint = declCtx.paints.pop();\n      if (paint) {\n        hasLayer = true;\n        ctx.canvas.saveLayer(paint);\n      }\n    }\n    children.map((child) => {\n      if (!child.isDeclaration) {\n        draw(ctx, child);\n      }\n    });\n    if (hasLayer) {\n      ctx.canvas.restore();\n    }\n    return;\n  }\n  const { type, props: rawProps, children } = node;\n  // Regular nodes\n  const props = materialize(rawProps);\n  const { shouldRestoreMatrix, shouldRestorePaint, extraPaints } =\n    preProcessContext(ctx, props, node);\n  const paints = [ctx.getPaint(), ...extraPaints];\n  paints.forEach((paint) => {\n    const lctx = { paint, Skia: ctx.Skia, canvas: ctx.canvas };\n    switch (type) {\n      case NodeType.Box:\n        drawBox(lctx, props, node.children);\n        break;\n      case NodeType.Image:\n        drawImage(lctx, props);\n        break;\n      case NodeType.Points:\n        drawPoints(lctx, props);\n        break;\n      case NodeType.Path:\n        drawPath(lctx, props);\n        break;\n      case NodeType.Rect:\n        drawRect(lctx, props);\n        break;\n      case NodeType.RRect:\n        drawRRect(lctx, props);\n        break;\n      case NodeType.Oval:\n        drawOval(lctx, props);\n        break;\n      case NodeType.Line:\n        drawLine(lctx, props);\n        break;\n      case NodeType.Patch:\n        drawPatch(lctx, props);\n        break;\n      case NodeType.Vertices:\n        drawVertices(lctx, props);\n        break;\n      case NodeType.DiffRect:\n        drawDiffRect(lctx, props);\n        break;\n      case NodeType.Text:\n        drawText(lctx, props);\n        break;\n      case NodeType.TextPath:\n        drawTextPath(lctx, props);\n        break;\n      case NodeType.TextBlob:\n        drawTextBlob(lctx, props);\n        break;\n      case NodeType.Glyphs:\n        drawGlyphs(lctx, props);\n        break;\n      case NodeType.Picture:\n        drawPicture(lctx, props);\n        break;\n      case NodeType.ImageSVG:\n        drawImageSVG(lctx, props);\n        break;\n      case NodeType.Paragraph:\n        drawParagraph(lctx, props);\n        break;\n      case NodeType.Atlas:\n        drawAtlas(lctx, props);\n        break;\n      case NodeType.Circle:\n        drawCircle(lctx, props);\n        break;\n      case NodeType.Fill:\n        drawFill(lctx, props);\n        break;\n      case NodeType.Group:\n        // TODO: do nothing\n        break;\n      default:\n        if (!node.isDeclaration) {\n          console.warn(`Unsupported node type: ${type}`);\n        }\n    }\n  });\n  children.forEach((child) => {\n    if (!child.isDeclaration) {\n      draw(ctx, child);\n    }\n  });\n  if (shouldRestoreMatrix) {\n    ctx.canvas.restore();\n  }\n  if (shouldRestorePaint) {\n    ctx.restore();\n  }\n}\n"],"mappings":"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","ignoreList":[]}